from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup

import keyboards as kb

router = Router()

# --- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ---
# –≠—Ç–æ –ø–µ—Ä–≤–æ–µ, —á—Ç–æ –≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–º.
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n\n"
        "–Ø ‚Äî –≤–∞—à –ª–∏—á–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∏—Ö —É—Å–ª—É–≥ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ Telegram-–±–æ—Ç–æ–≤.\n\n"
        "–Ø –ø–æ–º–æ–≥–∞—é –±–∏–∑–Ω–µ—Å—É —ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ —Å –ø–æ–º–æ—â—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. "
        "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Ç–∞–∫–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ —É —Å–µ–±—è.",
        reply_markup=kb.main_menu
    )

# --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ ---

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
@router.callback_query(F.data == "to_main_menu")
async def back_to_main_menu(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=kb.main_menu
    )
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–ö–∞–∫–∏–µ –±–æ—Ç—ã —è –¥–µ–ª–∞—é (–£—Å–ª—É–≥–∏ –∏ –¶–µ–Ω—ã)"
@router.callback_query(F.data == "services")
async def services_and_prices(callback: types.CallbackQuery):
    text = (
        "<b>‚≠ê –ú–æ–∏ —É—Å–ª—É–≥–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–æ—Ç–æ–≤:</b>\n\n"
        "<b>1. ¬´–ë–æ—Ç-–í–∏–∑–∏—Ç–∫–∞¬ª ‚Äî –æ—Ç 5 000 ‚ÇΩ</b>\n"
        "<i>–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ. –í–∫–ª—é—á–∞–µ—Ç –º–µ–Ω—é, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥.</i>\n\n"
        "<b>2. ¬´–ë–æ—Ç –¥–ª—è –ó–∞–ø–∏—Å–∏ –ö–ª–∏–µ–Ω—Ç–æ–≤¬ª ‚Äî –æ—Ç 15 000 ‚ÇΩ</b>\n"
        "<i>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±–∏—Ä–∞–µ—Ç –∑–∞—è–≤–∫–∏ 24/7 –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∏—Ö –≤–∞–º. –≠–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å–≥–∏. –•–∏—Ç –ø—Ä–æ–¥–∞–∂!</i>\n\n"
        "<b>3. ¬´–ë–æ—Ç –ø–æ –≤–∞—à–µ–º—É —Å—Ü–µ–Ω–∞—Ä–∏—é¬ª ‚Äî –æ—Ç 40 000 ‚ÇΩ</b>\n"
        "<i>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏, –ø—Ä–∏–µ–º –æ–ø–ª–∞—Ç—ã, —Ä–∞—Å—Å—ã–ª–∫–∏ ‚Äî —Ä–µ–∞–ª–∏–∑—É—é –ª—é–±—É—é –≤–∞—à—É –∏–¥–µ—é.</i>\n\n"
        "<b>üîß –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –æ—Ç 2 000 ‚ÇΩ/–º–µ—Å.</b>\n"
        "<i>–ü–æ–ª–Ω–æ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∑–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.</i>"
    )
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –ø—Ä—è–º–æ –∑–¥–µ—Å—å
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[kb.back_to_main_menu_button]])
    await callback.message.edit_text(text, reply_markup=back_keyboard, parse_mode="HTML")
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–º–µ—Ä—ã –º–æ–∏—Ö —Ä–∞–±–æ—Ç"
@router.callback_query(F.data == "portfolio")
async def portfolio(callback: types.CallbackQuery):
    await callback.answer(
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –∏ –µ—Å—Ç—å –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–º–µ—Ä –º–æ–µ–π —Ä–∞–±–æ—Ç—ã!\n\n"
        "–¢–∞–∫–∂–µ —Å–∫–æ—Ä–æ —è –¥–æ–±–∞–≤–ª—é —Å—é–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö —Å–¥–µ–ª–∞–ª –¥–ª—è —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.",
        show_alert=True # –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    )

# –ö–Ω–æ–ø–∫–∞ "–ó–∞—á–µ–º —ç—Ç–æ –±–∏–∑–Ω–µ—Å—É?"
@router.callback_query(F.data == "why_bot")
async def why_bot(callback: types.CallbackQuery):
    text = (
        "<b>ü§î –ö–∞–∫—É—é –ø–æ–ª—å–∑—É –ø—Ä–∏–Ω–æ—Å–∏—Ç –±–æ—Ç?</b>\n\n"
        "<b>1. –≠–ö–û–ù–û–ú–ò–¢ –í–†–ï–ú–Ø:</b> –ë–æ—Ç —Å–∞–º –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ç–∏–ø–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞ —É—Å–ª—É–≥–∏.\n"
        "<b>2. –ü–†–ò–ù–û–°–ò–¢ –î–ï–ù–¨–ì–ò:</b> –†–∞–±–æ—Ç–∞–µ—Ç 24/7 –∏ –Ω–µ —É–ø—É—Å—Ç–∏—Ç –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–∏—Å–∞–ª –ø–æ–∑–¥–Ω–æ –≤–µ—á–µ—Ä–æ–º.\n"
        "<b>3. –£–õ–£–ß–®–ê–ï–¢ –°–ï–†–í–ò–°:</b> –ö–ª–∏–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—é—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, —á—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –∏—Ö –ª–æ—è–ª—å–Ω–æ—Å—Ç—å.\n"
        "<b>4. –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–£–ï–¢ –†–£–¢–ò–ù–£:</b> –ë–æ—Ç –Ω–µ —É—Å—Ç–∞–µ—Ç, –Ω–µ –æ—à–∏–±–∞–µ—Ç—Å—è –∏ –Ω–µ –ø—Ä–æ—Å–∏—Ç –∑–∞—Ä–ø–ª–∞—Ç—É."
    )
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[kb.back_to_main_menu_button]])
    await callback.message.edit_text(text, reply_markup=back_keyboard, parse_mode="HTML")
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–û–±–æ –º–Ω–µ"
@router.callback_query(F.data == "about_me")
async def about_me(callback: types.CallbackQuery):
    # –ó–∞–º–µ–Ω–∏ [–¢–≤–æ–µ –ò–º—è] –Ω–∞ —Å–≤–æ–µ
    text = "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ö—É—Ä–±–∞–Ω, —è –∑–∞–Ω–∏–º–∞—é—Å—å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª–µ–∑–Ω—ã—Ö Telegram-–±–æ—Ç–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞. –ú–æ—è —Ü–µ–ª—å ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, –∞ —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç. –°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π, –∏ –º—ã –æ–±—Å—É–¥–∏–º –∑–∞–¥–∞—á–∏ –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞."
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[kb.back_to_main_menu_button]])
    await callback.message.edit_text(text, reply_markup=back_keyboard)
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
@router.callback_query(F.data == "contact_me")
async def contact_me(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –±–æ—Ç–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ.",
        reply_markup=kb.contact_menu
    )
    await callback.answer()